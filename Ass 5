Program :
Impliment stack using Single Linked List

Rol No: 10
Name: Basim Shebin K P

Program Code:


#include <stdio.h>
#include <stdlib.h>

struct Node 
{
	int data;
	struct Node* next;
};
struct Node* top = NULL;

void push(int value) 
{
	struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
	if (newNode == NULL) 
	{
	        printf("Memory allocation failed.\n");
	        return;
	}
	newNode->data = value;
	newNode->next = top;
	top = newNode;
	printf("Pushed %d onto the stack.\n", value);
}

void pop() 
{
	if (top == NULL) 
	{
		printf("Stack is empty. Nothing to pop.\n");
		return;
	}
	struct Node* temp = top;
	printf("Popped %d from the stack.\n",top->data);
	top = top->next;
	free(temp);
}

void Traversal() 
{
	if (top == NULL) 
	{
		printf("Stack is empty.\n");
		return;
	}
	struct Node* temp = top;
	printf("Stack elements: ");
	while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
	}
	printf("\n");
}


int main() 
{
	int choice, value;
	while (1) 
	{
	        printf("\nStack Menu:\n");
	        printf("1. Push\n");
	        printf("2. Pop\n");
	        printf("3. Traversal\n");
	        printf("4. Exit\n");
	        printf("Enter your choice: ");
	        scanf("%d", &choice);

		switch (choice) 
		{
		case 1:
			printf("Enter the value to push: ");
			scanf("%d", &value);
			push(value);
			break;
		case 2:
			pop();
			break;
		case 3:
			Traversal();
			break;
		case 4:
			printf("Exiting...\n");
			exit(0);
		default:
			printf("Invalid choice. Please try again.\n");
		}
	}

	return 0;
}
